name: Build/Release Android App

on: workflow_dispatch

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      # 检出代码仓库
      - name: Check out Git repository
        uses: actions/checkout@v3

      # 设置 Java 环境
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 安装 Android SDK
      - name: Install Android SDK
        uses: reactivecircus/android-sdk-setup@v3
        with:
          ndk-version: '25.0.8775105' # 根据需要选择 NDK 版本
          tools: |
            platform-tools
            build-tools;33.0.2 # 根据需要选择 Build Tools 版本
            android-33 # 根据需要选择 API Level
            extra-google-google_play_services
            extra-google-m2repository
            extra-android-m2repository

      # 缓存 Gradle 依赖
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 配置 Keystore（用于签名 APK）
      - name: Setup Keystore
        run: |
          echo "$KEystore" | base64 --decode > keystore.jks
        env:
          KEystore: ${{ secrets.ANDROID_KEYSTORE }}

      # 构建 APK 或 AAB
      - name: Build APK/AAB
        run: ./gradlew assembleRelease
        env:
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      # 发布到 Google Play（可选）
      - name: Release to Google Play
        if: startsWith(github.ref, 'refs/tags/v')
        uses: r0adkll/upload-google-play@v2
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_JSON }}
          packageName: com.example.yourapp # 替换为你的应用包名
          releaseFiles: build/outputs/apk/release/*.apk # 替换为实际输出路径
          track: internal # 替换为目标轨道（internal/beta/production 等）
